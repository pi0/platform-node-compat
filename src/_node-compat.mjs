// Auto generated with scripts/collect.mjs
export default {
  "version": "24.9.0",
  "globals": {
    "globalKeys": [
      "AbortController",
      "AbortSignal",
      "AggregateError",
      "Array",
      "ArrayBuffer",
      "AsyncDisposableStack",
      "Atomics",
      "BigInt",
      "BigInt64Array",
      "BigUint64Array",
      "Blob",
      "Boolean",
      "BroadcastChannel",
      "Buffer",
      "ByteLengthQueuingStrategy",
      "CloseEvent",
      "CompressionStream",
      "CountQueuingStrategy",
      "Crypto",
      "CryptoKey",
      "CustomEvent",
      "DOMException",
      "DataView",
      "Date",
      "DecompressionStream",
      "DisposableStack",
      "Error",
      "EvalError",
      "Event",
      "EventTarget",
      "File",
      "FinalizationRegistry",
      "Float16Array",
      "Float32Array",
      "Float64Array",
      "FormData",
      "Function",
      "Headers",
      "Infinity",
      "Int16Array",
      "Int32Array",
      "Int8Array",
      "Intl",
      "Iterator",
      "JSON",
      "Map",
      "Math",
      "MessageChannel",
      "MessageEvent",
      "MessagePort",
      "NaN",
      "Navigator",
      "Number",
      "Object",
      "Performance",
      "PerformanceEntry",
      "PerformanceMark",
      "PerformanceMeasure",
      "PerformanceObserver",
      "PerformanceObserverEntryList",
      "PerformanceResourceTiming",
      "Promise",
      "Proxy",
      "RangeError",
      "ReadableByteStreamController",
      "ReadableStream",
      "ReadableStreamBYOBReader",
      "ReadableStreamBYOBRequest",
      "ReadableStreamDefaultController",
      "ReadableStreamDefaultReader",
      "ReferenceError",
      "Reflect",
      "RegExp",
      "Request",
      "Response",
      "Set",
      "SharedArrayBuffer",
      "String",
      "SubtleCrypto",
      "SuppressedError",
      "Symbol",
      "SyntaxError",
      "TextDecoder",
      "TextDecoderStream",
      "TextEncoder",
      "TextEncoderStream",
      "TransformStream",
      "TransformStreamDefaultController",
      "TypeError",
      "URIError",
      "URL",
      "URLPattern",
      "URLSearchParams",
      "Uint16Array",
      "Uint32Array",
      "Uint8Array",
      "Uint8ClampedArray",
      "WeakMap",
      "WeakRef",
      "WeakSet",
      "WebAssembly",
      "WebSocket",
      "WritableStream",
      "WritableStreamDefaultController",
      "WritableStreamDefaultWriter",
      "atob",
      "btoa",
      "clearImmediate",
      "clearInterval",
      "clearTimeout",
      "console",
      "crypto",
      "decodeURI",
      "decodeURIComponent",
      "encodeURI",
      "encodeURIComponent",
      "escape",
      "eval",
      "fetch",
      "global",
      "globalThis",
      "isFinite",
      "isNaN",
      "navigator",
      "parseFloat",
      "parseInt",
      "performance",
      "process",
      "queueMicrotask",
      "setImmediate",
      "setInterval",
      "setTimeout",
      "structuredClone",
      "undefined",
      "unescape"
    ],
    "processKeys": [
      "_debugEnd",
      "_debugProcess",
      "_events",
      "_eventsCount",
      "_exiting",
      "_fatalException",
      "_getActiveHandles",
      "_getActiveRequests",
      "_kill",
      "_linkedBinding",
      "_maxListeners",
      "_preload_modules",
      "_rawDebug",
      "_startProfilerIdleNotifier",
      "_stopProfilerIdleNotifier",
      "_tickCallback",
      "abort",
      "allowedNodeEnvironmentFlags",
      "arch",
      "argv",
      "argv0",
      "availableMemory",
      "binding",
      "chdir",
      "config",
      "constrainedMemory",
      "cpuUsage",
      "cwd",
      "debugPort",
      "dlopen",
      "domain",
      "emitWarning",
      "env",
      "execArgv",
      "execPath",
      "execve",
      "exit",
      "exitCode",
      "features",
      "finalization",
      "getActiveResourcesInfo",
      "getBuiltinModule",
      "getegid",
      "geteuid",
      "getgid",
      "getgroups",
      "getuid",
      "hasUncaughtExceptionCaptureCallback",
      "hrtime",
      "initgroups",
      "kill",
      "loadEnvFile",
      "memoryUsage",
      "moduleLoadList",
      "nextTick",
      "openStdin",
      "pid",
      "platform",
      "ppid",
      "reallyExit",
      "ref",
      "release",
      "report",
      "resourceUsage",
      "setSourceMapsEnabled",
      "setUncaughtExceptionCaptureCallback",
      "setegid",
      "seteuid",
      "setgid",
      "setgroups",
      "setuid",
      "sourceMapsEnabled",
      "stderr",
      "stdin",
      "stdout",
      "threadCpuUsage",
      "title",
      "umask",
      "unref",
      "uptime",
      "version",
      "versions"
    ]
  },
  "modules": {
    "node:_http_agent": {
      "exports": [
        "Agent",
        "globalAgent"
      ]
    },
    "node:_http_client": {
      "exports": [
        "ClientRequest"
      ]
    },
    "node:_http_common": {
      "exports": [
        "CRLF",
        "HTTPParser",
        "_checkInvalidHeaderChar",
        "_checkIsHttpToken",
        "chunkExpression",
        "continueExpression",
        "freeParser",
        "isLenient",
        "kIncomingMessage",
        "methods",
        "parsers",
        "prepareError"
      ]
    },
    "node:_http_incoming": {
      "exports": [
        "IncomingMessage",
        "readStart",
        "readStop"
      ]
    },
    "node:_http_outgoing": {
      "exports": [
        "OutgoingMessage",
        "kHighWaterMark",
        "kUniqueHeaders",
        "parseUniqueHeadersOption",
        "validateHeaderName",
        "validateHeaderValue"
      ]
    },
    "node:_http_server": {
      "exports": [
        "STATUS_CODES",
        "Server",
        "ServerResponse",
        "_connectionListener",
        "httpServerPreClose",
        "kConnectionsCheckingInterval",
        "kServerResponse",
        "setupConnectionsTracking",
        "storeHTTPOptions"
      ]
    },
    "node:_stream_duplex": {
      "exports": [
        "from",
        "fromWeb",
        "toWeb"
      ]
    },
    "node:_stream_passthrough": {
      "exports": []
    },
    "node:_stream_readable": {
      "exports": [
        "ReadableState",
        "_fromList",
        "from",
        "fromWeb",
        "toWeb",
        "wrap"
      ]
    },
    "node:_stream_transform": {
      "exports": []
    },
    "node:_stream_wrap": {
      "exports": [],
      "extraDefaultExports": [
        "StreamWrap"
      ]
    },
    "node:_stream_writable": {
      "exports": [
        "WritableState",
        "fromWeb",
        "toWeb"
      ]
    },
    "node:_tls_common": {
      "exports": [
        "SecureContext",
        "createSecureContext",
        "translatePeerCertificate"
      ]
    },
    "node:_tls_wrap": {
      "exports": [
        "Server",
        "TLSSocket",
        "connect",
        "createServer"
      ]
    },
    "node:assert": {
      "exports": [
        "Assert",
        "AssertionError",
        "CallTracker",
        "deepEqual",
        "deepStrictEqual",
        "doesNotMatch",
        "doesNotReject",
        "doesNotThrow",
        "equal",
        "fail",
        "ifError",
        "match",
        "notDeepEqual",
        "notDeepStrictEqual",
        "notEqual",
        "notStrictEqual",
        "ok",
        "partialDeepStrictEqual",
        "rejects",
        "strict",
        "strictEqual",
        "throws"
      ]
    },
    "node:assert/strict": {
      "exports": [
        "Assert",
        "AssertionError",
        "CallTracker",
        "deepEqual",
        "deepStrictEqual",
        "doesNotMatch",
        "doesNotReject",
        "doesNotThrow",
        "equal",
        "fail",
        "ifError",
        "match",
        "notDeepEqual",
        "notDeepStrictEqual",
        "notEqual",
        "notStrictEqual",
        "ok",
        "partialDeepStrictEqual",
        "rejects",
        "strict",
        "strictEqual",
        "throws"
      ]
    },
    "node:async_hooks": {
      "exports": [
        "AsyncLocalStorage",
        "AsyncResource",
        "asyncWrapProviders",
        "createHook",
        "executionAsyncId",
        "executionAsyncResource",
        "triggerAsyncId"
      ]
    },
    "node:buffer": {
      "exports": [
        "Blob",
        "Buffer",
        "File",
        "INSPECT_MAX_BYTES",
        "SlowBuffer",
        "atob",
        "btoa",
        "constants",
        "isAscii",
        "isUtf8",
        "kMaxLength",
        "kStringMaxLength",
        "resolveObjectURL",
        "transcode"
      ]
    },
    "node:child_process": {
      "exports": [
        "ChildProcess",
        "_forkChild",
        "exec",
        "execFile",
        "execFileSync",
        "execSync",
        "fork",
        "spawn",
        "spawnSync"
      ]
    },
    "node:cluster": {
      "exports": [
        "SCHED_NONE",
        "SCHED_RR",
        "Worker",
        "_events",
        "_eventsCount",
        "_maxListeners",
        "disconnect",
        "fork",
        "isMaster",
        "isPrimary",
        "isWorker",
        "schedulingPolicy",
        "settings",
        "setupMaster",
        "setupPrimary",
        "workers"
      ]
    },
    "node:console": {
      "exports": [
        "Console",
        "assert",
        "clear",
        "context",
        "count",
        "countReset",
        "createTask",
        "debug",
        "dir",
        "dirxml",
        "error",
        "group",
        "groupCollapsed",
        "groupEnd",
        "info",
        "log",
        "profile",
        "profileEnd",
        "table",
        "time",
        "timeEnd",
        "timeLog",
        "timeStamp",
        "trace",
        "warn"
      ],
      "extraDefaultExports": [
        "_ignoreErrors",
        "_stderr",
        "_stderrErrorHandler",
        "_stdout",
        "_stdoutErrorHandler",
        "_times"
      ]
    },
    "node:constants": {
      "exports": [
        "COPYFILE_EXCL",
        "COPYFILE_FICLONE",
        "COPYFILE_FICLONE_FORCE",
        "DH_CHECK_P_NOT_PRIME",
        "DH_CHECK_P_NOT_SAFE_PRIME",
        "DH_NOT_SUITABLE_GENERATOR",
        "DH_UNABLE_TO_CHECK_GENERATOR",
        "E2BIG",
        "EACCES",
        "EADDRINUSE",
        "EADDRNOTAVAIL",
        "EAFNOSUPPORT",
        "EAGAIN",
        "EALREADY",
        "EBADF",
        "EBADMSG",
        "EBUSY",
        "ECANCELED",
        "ECHILD",
        "ECONNABORTED",
        "ECONNREFUSED",
        "ECONNRESET",
        "EDEADLK",
        "EDESTADDRREQ",
        "EDOM",
        "EDQUOT",
        "EEXIST",
        "EFAULT",
        "EFBIG",
        "EHOSTUNREACH",
        "EIDRM",
        "EILSEQ",
        "EINPROGRESS",
        "EINTR",
        "EINVAL",
        "EIO",
        "EISCONN",
        "EISDIR",
        "ELOOP",
        "EMFILE",
        "EMLINK",
        "EMSGSIZE",
        "EMULTIHOP",
        "ENAMETOOLONG",
        "ENETDOWN",
        "ENETRESET",
        "ENETUNREACH",
        "ENFILE",
        "ENGINE_METHOD_ALL",
        "ENGINE_METHOD_CIPHERS",
        "ENGINE_METHOD_DH",
        "ENGINE_METHOD_DIGESTS",
        "ENGINE_METHOD_DSA",
        "ENGINE_METHOD_EC",
        "ENGINE_METHOD_NONE",
        "ENGINE_METHOD_PKEY_ASN1_METHS",
        "ENGINE_METHOD_PKEY_METHS",
        "ENGINE_METHOD_RAND",
        "ENGINE_METHOD_RSA",
        "ENOBUFS",
        "ENODATA",
        "ENODEV",
        "ENOENT",
        "ENOEXEC",
        "ENOLCK",
        "ENOLINK",
        "ENOMEM",
        "ENOMSG",
        "ENOPROTOOPT",
        "ENOSPC",
        "ENOSR",
        "ENOSTR",
        "ENOSYS",
        "ENOTCONN",
        "ENOTDIR",
        "ENOTEMPTY",
        "ENOTSOCK",
        "ENOTSUP",
        "ENOTTY",
        "ENXIO",
        "EOPNOTSUPP",
        "EOVERFLOW",
        "EPERM",
        "EPIPE",
        "EPROTO",
        "EPROTONOSUPPORT",
        "EPROTOTYPE",
        "ERANGE",
        "EROFS",
        "ESPIPE",
        "ESRCH",
        "ESTALE",
        "ETIME",
        "ETIMEDOUT",
        "ETXTBSY",
        "EWOULDBLOCK",
        "EXDEV",
        "F_OK",
        "OPENSSL_VERSION_NUMBER",
        "O_APPEND",
        "O_CREAT",
        "O_DIRECT",
        "O_DIRECTORY",
        "O_DSYNC",
        "O_EXCL",
        "O_NOATIME",
        "O_NOCTTY",
        "O_NOFOLLOW",
        "O_NONBLOCK",
        "O_RDONLY",
        "O_RDWR",
        "O_SYNC",
        "O_TRUNC",
        "O_WRONLY",
        "POINT_CONVERSION_COMPRESSED",
        "POINT_CONVERSION_HYBRID",
        "POINT_CONVERSION_UNCOMPRESSED",
        "PRIORITY_ABOVE_NORMAL",
        "PRIORITY_BELOW_NORMAL",
        "PRIORITY_HIGH",
        "PRIORITY_HIGHEST",
        "PRIORITY_LOW",
        "PRIORITY_NORMAL",
        "RSA_NO_PADDING",
        "RSA_PKCS1_OAEP_PADDING",
        "RSA_PKCS1_PADDING",
        "RSA_PKCS1_PSS_PADDING",
        "RSA_PSS_SALTLEN_AUTO",
        "RSA_PSS_SALTLEN_DIGEST",
        "RSA_PSS_SALTLEN_MAX_SIGN",
        "RSA_X931_PADDING",
        "RTLD_DEEPBIND",
        "RTLD_GLOBAL",
        "RTLD_LAZY",
        "RTLD_LOCAL",
        "RTLD_NOW",
        "R_OK",
        "SIGABRT",
        "SIGALRM",
        "SIGBUS",
        "SIGCHLD",
        "SIGCONT",
        "SIGFPE",
        "SIGHUP",
        "SIGILL",
        "SIGINT",
        "SIGIO",
        "SIGIOT",
        "SIGKILL",
        "SIGPIPE",
        "SIGPOLL",
        "SIGPROF",
        "SIGPWR",
        "SIGQUIT",
        "SIGSEGV",
        "SIGSTKFLT",
        "SIGSTOP",
        "SIGSYS",
        "SIGTERM",
        "SIGTRAP",
        "SIGTSTP",
        "SIGTTIN",
        "SIGTTOU",
        "SIGURG",
        "SIGUSR1",
        "SIGUSR2",
        "SIGVTALRM",
        "SIGWINCH",
        "SIGXCPU",
        "SIGXFSZ",
        "SSL_OP_ALL",
        "SSL_OP_ALLOW_NO_DHE_KEX",
        "SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION",
        "SSL_OP_CIPHER_SERVER_PREFERENCE",
        "SSL_OP_CISCO_ANYCONNECT",
        "SSL_OP_COOKIE_EXCHANGE",
        "SSL_OP_CRYPTOPRO_TLSEXT_BUG",
        "SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS",
        "SSL_OP_LEGACY_SERVER_CONNECT",
        "SSL_OP_NO_COMPRESSION",
        "SSL_OP_NO_ENCRYPT_THEN_MAC",
        "SSL_OP_NO_QUERY_MTU",
        "SSL_OP_NO_RENEGOTIATION",
        "SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION",
        "SSL_OP_NO_SSLv2",
        "SSL_OP_NO_SSLv3",
        "SSL_OP_NO_TICKET",
        "SSL_OP_NO_TLSv1",
        "SSL_OP_NO_TLSv1_1",
        "SSL_OP_NO_TLSv1_2",
        "SSL_OP_NO_TLSv1_3",
        "SSL_OP_PRIORITIZE_CHACHA",
        "SSL_OP_TLS_ROLLBACK_BUG",
        "S_IFBLK",
        "S_IFCHR",
        "S_IFDIR",
        "S_IFIFO",
        "S_IFLNK",
        "S_IFMT",
        "S_IFREG",
        "S_IFSOCK",
        "S_IRGRP",
        "S_IROTH",
        "S_IRUSR",
        "S_IRWXG",
        "S_IRWXO",
        "S_IRWXU",
        "S_IWGRP",
        "S_IWOTH",
        "S_IWUSR",
        "S_IXGRP",
        "S_IXOTH",
        "S_IXUSR",
        "TLS1_1_VERSION",
        "TLS1_2_VERSION",
        "TLS1_3_VERSION",
        "TLS1_VERSION",
        "UV_DIRENT_BLOCK",
        "UV_DIRENT_CHAR",
        "UV_DIRENT_DIR",
        "UV_DIRENT_FIFO",
        "UV_DIRENT_FILE",
        "UV_DIRENT_LINK",
        "UV_DIRENT_SOCKET",
        "UV_DIRENT_UNKNOWN",
        "UV_FS_COPYFILE_EXCL",
        "UV_FS_COPYFILE_FICLONE",
        "UV_FS_COPYFILE_FICLONE_FORCE",
        "UV_FS_O_FILEMAP",
        "UV_FS_SYMLINK_DIR",
        "UV_FS_SYMLINK_JUNCTION",
        "W_OK",
        "X_OK",
        "defaultCipherList",
        "defaultCoreCipherList"
      ]
    },
    "node:crypto": {
      "exports": [
        "Certificate",
        "Cipheriv",
        "Decipheriv",
        "DiffieHellman",
        "DiffieHellmanGroup",
        "ECDH",
        "Hash",
        "Hmac",
        "KeyObject",
        "Sign",
        "Verify",
        "X509Certificate",
        "argon2",
        "argon2Sync",
        "checkPrime",
        "checkPrimeSync",
        "constants",
        "createCipheriv",
        "createDecipheriv",
        "createDiffieHellman",
        "createDiffieHellmanGroup",
        "createECDH",
        "createHash",
        "createHmac",
        "createPrivateKey",
        "createPublicKey",
        "createSecretKey",
        "createSign",
        "createVerify",
        "decapsulate",
        "diffieHellman",
        "encapsulate",
        "generateKey",
        "generateKeyPair",
        "generateKeyPairSync",
        "generateKeySync",
        "generatePrime",
        "generatePrimeSync",
        "getCipherInfo",
        "getCiphers",
        "getCurves",
        "getDiffieHellman",
        "getFips",
        "getHashes",
        "getRandomValues",
        "hash",
        "hkdf",
        "hkdfSync",
        "pbkdf2",
        "pbkdf2Sync",
        "privateDecrypt",
        "privateEncrypt",
        "publicDecrypt",
        "publicEncrypt",
        "randomBytes",
        "randomFill",
        "randomFillSync",
        "randomInt",
        "randomUUID",
        "scrypt",
        "scryptSync",
        "secureHeapUsed",
        "setEngine",
        "setFips",
        "sign",
        "subtle",
        "timingSafeEqual",
        "verify",
        "webcrypto"
      ],
      "extraDefaultExports": [
        "fips",
        "prng",
        "pseudoRandomBytes",
        "rng"
      ]
    },
    "node:dgram": {
      "exports": [
        "Socket",
        "_createSocketHandle",
        "createSocket"
      ]
    },
    "node:diagnostics_channel": {
      "exports": [
        "Channel",
        "channel",
        "hasSubscribers",
        "subscribe",
        "tracingChannel",
        "unsubscribe"
      ]
    },
    "node:dns": {
      "exports": [
        "ADDRCONFIG",
        "ADDRGETNETWORKPARAMS",
        "ALL",
        "BADFAMILY",
        "BADFLAGS",
        "BADHINTS",
        "BADNAME",
        "BADQUERY",
        "BADRESP",
        "BADSTR",
        "CANCELLED",
        "CONNREFUSED",
        "DESTRUCTION",
        "EOF",
        "FILE",
        "FORMERR",
        "LOADIPHLPAPI",
        "NODATA",
        "NOMEM",
        "NONAME",
        "NOTFOUND",
        "NOTIMP",
        "NOTINITIALIZED",
        "REFUSED",
        "Resolver",
        "SERVFAIL",
        "TIMEOUT",
        "V4MAPPED",
        "getDefaultResultOrder",
        "getServers",
        "lookup",
        "lookupService",
        "promises",
        "resolve",
        "resolve4",
        "resolve6",
        "resolveAny",
        "resolveCaa",
        "resolveCname",
        "resolveMx",
        "resolveNaptr",
        "resolveNs",
        "resolvePtr",
        "resolveSoa",
        "resolveSrv",
        "resolveTlsa",
        "resolveTxt",
        "reverse",
        "setDefaultResultOrder",
        "setServers"
      ]
    },
    "node:dns/promises": {
      "exports": [
        "ADDRGETNETWORKPARAMS",
        "BADFAMILY",
        "BADFLAGS",
        "BADHINTS",
        "BADNAME",
        "BADQUERY",
        "BADRESP",
        "BADSTR",
        "CANCELLED",
        "CONNREFUSED",
        "DESTRUCTION",
        "EOF",
        "FILE",
        "FORMERR",
        "LOADIPHLPAPI",
        "NODATA",
        "NOMEM",
        "NONAME",
        "NOTFOUND",
        "NOTIMP",
        "NOTINITIALIZED",
        "REFUSED",
        "Resolver",
        "SERVFAIL",
        "TIMEOUT",
        "getDefaultResultOrder",
        "getServers",
        "lookup",
        "lookupService",
        "resolve",
        "resolve4",
        "resolve6",
        "resolveAny",
        "resolveCaa",
        "resolveCname",
        "resolveMx",
        "resolveNaptr",
        "resolveNs",
        "resolvePtr",
        "resolveSoa",
        "resolveSrv",
        "resolveTlsa",
        "resolveTxt",
        "reverse",
        "setDefaultResultOrder",
        "setServers"
      ]
    },
    "node:domain": {
      "exports": [
        "Domain",
        "_stack",
        "active",
        "create",
        "createDomain"
      ]
    },
    "node:events": {
      "exports": [
        "EventEmitter",
        "EventEmitterAsyncResource",
        "addAbortListener",
        "captureRejectionSymbol",
        "captureRejections",
        "defaultMaxListeners",
        "errorMonitor",
        "getEventListeners",
        "getMaxListeners",
        "init",
        "listenerCount",
        "on",
        "once",
        "setMaxListeners",
        "usingDomains"
      ],
      "extraDefaultExports": [
        "kMaxEventTargetListeners",
        "kMaxEventTargetListenersWarned"
      ]
    },
    "node:fs": {
      "exports": [
        "Dir",
        "Dirent",
        "FileReadStream",
        "FileWriteStream",
        "ReadStream",
        "Stats",
        "Utf8Stream",
        "WriteStream",
        "_toUnixTimestamp",
        "access",
        "accessSync",
        "appendFile",
        "appendFileSync",
        "chmod",
        "chmodSync",
        "chown",
        "chownSync",
        "close",
        "closeSync",
        "constants",
        "copyFile",
        "copyFileSync",
        "cp",
        "cpSync",
        "createReadStream",
        "createWriteStream",
        "exists",
        "existsSync",
        "fchmod",
        "fchmodSync",
        "fchown",
        "fchownSync",
        "fdatasync",
        "fdatasyncSync",
        "fstat",
        "fstatSync",
        "fsync",
        "fsyncSync",
        "ftruncate",
        "ftruncateSync",
        "futimes",
        "futimesSync",
        "glob",
        "globSync",
        "lchmod",
        "lchmodSync",
        "lchown",
        "lchownSync",
        "link",
        "linkSync",
        "lstat",
        "lstatSync",
        "lutimes",
        "lutimesSync",
        "mkdir",
        "mkdirSync",
        "mkdtemp",
        "mkdtempDisposableSync",
        "mkdtempSync",
        "open",
        "openAsBlob",
        "openSync",
        "opendir",
        "opendirSync",
        "promises",
        "read",
        "readFile",
        "readFileSync",
        "readSync",
        "readdir",
        "readdirSync",
        "readlink",
        "readlinkSync",
        "readv",
        "readvSync",
        "realpath",
        "realpathSync",
        "rename",
        "renameSync",
        "rm",
        "rmSync",
        "rmdir",
        "rmdirSync",
        "stat",
        "statSync",
        "statfs",
        "statfsSync",
        "symlink",
        "symlinkSync",
        "truncate",
        "truncateSync",
        "unlink",
        "unlinkSync",
        "unwatchFile",
        "utimes",
        "utimesSync",
        "watch",
        "watchFile",
        "write",
        "writeFile",
        "writeFileSync",
        "writeSync",
        "writev",
        "writevSync"
      ],
      "extraDefaultExports": [
        "F_OK",
        "R_OK",
        "W_OK",
        "X_OK"
      ]
    },
    "node:fs/promises": {
      "exports": [
        "access",
        "appendFile",
        "chmod",
        "chown",
        "constants",
        "copyFile",
        "cp",
        "glob",
        "lchmod",
        "lchown",
        "link",
        "lstat",
        "lutimes",
        "mkdir",
        "mkdtemp",
        "mkdtempDisposable",
        "open",
        "opendir",
        "readFile",
        "readdir",
        "readlink",
        "realpath",
        "rename",
        "rm",
        "rmdir",
        "stat",
        "statfs",
        "symlink",
        "truncate",
        "unlink",
        "utimes",
        "watch",
        "writeFile"
      ]
    },
    "node:http": {
      "exports": [
        "Agent",
        "ClientRequest",
        "CloseEvent",
        "IncomingMessage",
        "METHODS",
        "MessageEvent",
        "OutgoingMessage",
        "STATUS_CODES",
        "Server",
        "ServerResponse",
        "WebSocket",
        "_connectionListener",
        "createServer",
        "get",
        "globalAgent",
        "maxHeaderSize",
        "request",
        "setMaxIdleHTTPParsers",
        "validateHeaderName",
        "validateHeaderValue"
      ]
    },
    "node:http2": {
      "exports": [
        "Http2ServerRequest",
        "Http2ServerResponse",
        "connect",
        "constants",
        "createSecureServer",
        "createServer",
        "getDefaultSettings",
        "getPackedSettings",
        "getUnpackedSettings",
        "performServerHandshake",
        "sensitiveHeaders"
      ]
    },
    "node:https": {
      "exports": [
        "Agent",
        "Server",
        "createServer",
        "get",
        "globalAgent",
        "request"
      ]
    },
    "node:inspector": {
      "exports": [
        "Network",
        "NetworkResources",
        "Session",
        "close",
        "console",
        "open",
        "url",
        "waitForDebugger"
      ]
    },
    "node:inspector/promises": {
      "exports": [
        "Network",
        "NetworkResources",
        "Session",
        "close",
        "console",
        "open",
        "url",
        "waitForDebugger"
      ]
    },
    "node:module": {
      "exports": [
        "Module",
        "SourceMap",
        "_cache",
        "_debug",
        "_extensions",
        "_findPath",
        "_initPaths",
        "_load",
        "_nodeModulePaths",
        "_pathCache",
        "_preloadModules",
        "_resolveFilename",
        "_resolveLookupPaths",
        "builtinModules",
        "constants",
        "createRequire",
        "enableCompileCache",
        "findPackageJSON",
        "findSourceMap",
        "flushCompileCache",
        "getCompileCacheDir",
        "getSourceMapsSupport",
        "globalPaths",
        "isBuiltin",
        "register",
        "registerHooks",
        "runMain",
        "setSourceMapsSupport",
        "stripTypeScriptTypes",
        "syncBuiltinESMExports"
      ],
      "extraDefaultExports": [
        "_readPackage",
        "_stat",
        "wrap",
        "wrapper"
      ]
    },
    "node:net": {
      "exports": [
        "BlockList",
        "Server",
        "Socket",
        "SocketAddress",
        "Stream",
        "_createServerHandle",
        "_normalizeArgs",
        "connect",
        "createConnection",
        "createServer",
        "getDefaultAutoSelectFamily",
        "getDefaultAutoSelectFamilyAttemptTimeout",
        "isIP",
        "isIPv4",
        "isIPv6",
        "setDefaultAutoSelectFamily",
        "setDefaultAutoSelectFamilyAttemptTimeout"
      ]
    },
    "node:os": {
      "exports": [
        "EOL",
        "arch",
        "availableParallelism",
        "constants",
        "cpus",
        "devNull",
        "endianness",
        "freemem",
        "getPriority",
        "homedir",
        "hostname",
        "loadavg",
        "machine",
        "networkInterfaces",
        "platform",
        "release",
        "setPriority",
        "tmpdir",
        "totalmem",
        "type",
        "uptime",
        "userInfo",
        "version"
      ]
    },
    "node:path": {
      "exports": [
        "_makeLong",
        "basename",
        "delimiter",
        "dirname",
        "extname",
        "format",
        "isAbsolute",
        "join",
        "matchesGlob",
        "normalize",
        "parse",
        "posix",
        "relative",
        "resolve",
        "sep",
        "toNamespacedPath",
        "win32"
      ]
    },
    "node:path/posix": {
      "exports": [
        "_makeLong",
        "basename",
        "delimiter",
        "dirname",
        "extname",
        "format",
        "isAbsolute",
        "join",
        "matchesGlob",
        "normalize",
        "parse",
        "posix",
        "relative",
        "resolve",
        "sep",
        "toNamespacedPath",
        "win32"
      ]
    },
    "node:path/win32": {
      "exports": [
        "_makeLong",
        "basename",
        "delimiter",
        "dirname",
        "extname",
        "format",
        "isAbsolute",
        "join",
        "matchesGlob",
        "normalize",
        "parse",
        "posix",
        "relative",
        "resolve",
        "sep",
        "toNamespacedPath",
        "win32"
      ]
    },
    "node:perf_hooks": {
      "exports": [
        "Performance",
        "PerformanceEntry",
        "PerformanceMark",
        "PerformanceMeasure",
        "PerformanceObserver",
        "PerformanceObserverEntryList",
        "PerformanceResourceTiming",
        "constants",
        "createHistogram",
        "monitorEventLoopDelay",
        "performance"
      ]
    },
    "node:process": {
      "exports": [
        "_debugEnd",
        "_debugProcess",
        "_events",
        "_eventsCount",
        "_exiting",
        "_fatalException",
        "_getActiveHandles",
        "_getActiveRequests",
        "_kill",
        "_linkedBinding",
        "_maxListeners",
        "_preload_modules",
        "_rawDebug",
        "_startProfilerIdleNotifier",
        "_stopProfilerIdleNotifier",
        "_tickCallback",
        "abort",
        "allowedNodeEnvironmentFlags",
        "arch",
        "argv",
        "argv0",
        "availableMemory",
        "binding",
        "chdir",
        "config",
        "constrainedMemory",
        "cpuUsage",
        "cwd",
        "debugPort",
        "dlopen",
        "domain",
        "emitWarning",
        "env",
        "execArgv",
        "execPath",
        "execve",
        "exit",
        "exitCode",
        "features",
        "finalization",
        "getActiveResourcesInfo",
        "getBuiltinModule",
        "getegid",
        "geteuid",
        "getgid",
        "getgroups",
        "getuid",
        "hasUncaughtExceptionCaptureCallback",
        "hrtime",
        "initgroups",
        "kill",
        "loadEnvFile",
        "memoryUsage",
        "moduleLoadList",
        "nextTick",
        "openStdin",
        "pid",
        "platform",
        "ppid",
        "reallyExit",
        "ref",
        "release",
        "report",
        "resourceUsage",
        "setSourceMapsEnabled",
        "setUncaughtExceptionCaptureCallback",
        "setegid",
        "seteuid",
        "setgid",
        "setgroups",
        "setuid",
        "sourceMapsEnabled",
        "stderr",
        "stdin",
        "stdout",
        "threadCpuUsage",
        "title",
        "umask",
        "unref",
        "uptime",
        "version",
        "versions"
      ]
    },
    "node:punycode": {
      "exports": [
        "decode",
        "encode",
        "toASCII",
        "toUnicode",
        "ucs2",
        "version"
      ]
    },
    "node:querystring": {
      "exports": [
        "decode",
        "encode",
        "escape",
        "parse",
        "stringify",
        "unescape",
        "unescapeBuffer"
      ]
    },
    "node:readline": {
      "exports": [
        "Interface",
        "clearLine",
        "clearScreenDown",
        "createInterface",
        "cursorTo",
        "emitKeypressEvents",
        "moveCursor",
        "promises"
      ]
    },
    "node:readline/promises": {
      "exports": [
        "Interface",
        "Readline",
        "createInterface"
      ]
    },
    "node:repl": {
      "exports": [
        "REPLServer",
        "REPL_MODE_SLOPPY",
        "REPL_MODE_STRICT",
        "Recoverable",
        "isValidSyntax",
        "start",
        "writer"
      ],
      "extraDefaultExports": [
        "_builtinLibs",
        "builtinModules"
      ]
    },
    "node:stream": {
      "exports": [
        "Duplex",
        "PassThrough",
        "Readable",
        "Stream",
        "Transform",
        "Writable",
        "_isArrayBufferView",
        "_isUint8Array",
        "_uint8ArrayToBuffer",
        "addAbortSignal",
        "compose",
        "destroy",
        "duplexPair",
        "finished",
        "getDefaultHighWaterMark",
        "isDestroyed",
        "isDisturbed",
        "isErrored",
        "isReadable",
        "isWritable",
        "pipeline",
        "promises",
        "setDefaultHighWaterMark"
      ]
    },
    "node:stream/consumers": {
      "exports": [
        "arrayBuffer",
        "blob",
        "buffer",
        "json",
        "text"
      ]
    },
    "node:stream/promises": {
      "exports": [
        "finished",
        "pipeline"
      ]
    },
    "node:stream/web": {
      "exports": [
        "ByteLengthQueuingStrategy",
        "CompressionStream",
        "CountQueuingStrategy",
        "DecompressionStream",
        "ReadableByteStreamController",
        "ReadableStream",
        "ReadableStreamBYOBReader",
        "ReadableStreamBYOBRequest",
        "ReadableStreamDefaultController",
        "ReadableStreamDefaultReader",
        "TextDecoderStream",
        "TextEncoderStream",
        "TransformStream",
        "TransformStreamDefaultController",
        "WritableStream",
        "WritableStreamDefaultController",
        "WritableStreamDefaultWriter"
      ]
    },
    "node:string_decoder": {
      "exports": [
        "StringDecoder"
      ]
    },
    "node:sys": {
      "exports": [
        "MIMEParams",
        "MIMEType",
        "TextDecoder",
        "TextEncoder",
        "_errnoException",
        "_exceptionWithHostPort",
        "_extend",
        "aborted",
        "callbackify",
        "debug",
        "debuglog",
        "deprecate",
        "diff",
        "format",
        "formatWithOptions",
        "getCallSite",
        "getCallSites",
        "getSystemErrorMap",
        "getSystemErrorMessage",
        "getSystemErrorName",
        "inherits",
        "inspect",
        "isArray",
        "isDeepStrictEqual",
        "parseArgs",
        "parseEnv",
        "promisify",
        "setTraceSigInt",
        "stripVTControlCharacters",
        "styleText",
        "toUSVString",
        "transferableAbortController",
        "transferableAbortSignal",
        "types"
      ]
    },
    "node:timers": {
      "exports": [
        "clearImmediate",
        "clearInterval",
        "clearTimeout",
        "promises",
        "setImmediate",
        "setInterval",
        "setTimeout"
      ]
    },
    "node:timers/promises": {
      "exports": [
        "scheduler",
        "setImmediate",
        "setInterval",
        "setTimeout"
      ]
    },
    "node:tls": {
      "exports": [
        "CLIENT_RENEG_LIMIT",
        "CLIENT_RENEG_WINDOW",
        "DEFAULT_CIPHERS",
        "DEFAULT_ECDH_CURVE",
        "DEFAULT_MAX_VERSION",
        "DEFAULT_MIN_VERSION",
        "SecureContext",
        "Server",
        "TLSSocket",
        "checkServerIdentity",
        "connect",
        "convertALPNProtocols",
        "createSecureContext",
        "createServer",
        "getCACertificates",
        "getCiphers",
        "rootCertificates",
        "setDefaultCACertificates"
      ]
    },
    "node:trace_events": {
      "exports": [
        "createTracing",
        "getEnabledCategories"
      ]
    },
    "node:tty": {
      "exports": [
        "ReadStream",
        "WriteStream",
        "isatty"
      ]
    },
    "node:url": {
      "exports": [
        "URL",
        "URLPattern",
        "URLSearchParams",
        "Url",
        "domainToASCII",
        "domainToUnicode",
        "fileURLToPath",
        "fileURLToPathBuffer",
        "format",
        "parse",
        "pathToFileURL",
        "resolve",
        "resolveObject",
        "urlToHttpOptions"
      ]
    },
    "node:util": {
      "exports": [
        "MIMEParams",
        "MIMEType",
        "TextDecoder",
        "TextEncoder",
        "_errnoException",
        "_exceptionWithHostPort",
        "_extend",
        "aborted",
        "callbackify",
        "debug",
        "debuglog",
        "deprecate",
        "diff",
        "format",
        "formatWithOptions",
        "getCallSite",
        "getCallSites",
        "getSystemErrorMap",
        "getSystemErrorMessage",
        "getSystemErrorName",
        "inherits",
        "inspect",
        "isArray",
        "isDeepStrictEqual",
        "parseArgs",
        "parseEnv",
        "promisify",
        "setTraceSigInt",
        "stripVTControlCharacters",
        "styleText",
        "toUSVString",
        "transferableAbortController",
        "transferableAbortSignal",
        "types"
      ]
    },
    "node:util/types": {
      "exports": [
        "isAnyArrayBuffer",
        "isArgumentsObject",
        "isArrayBuffer",
        "isArrayBufferView",
        "isAsyncFunction",
        "isBigInt64Array",
        "isBigIntObject",
        "isBigUint64Array",
        "isBooleanObject",
        "isBoxedPrimitive",
        "isCryptoKey",
        "isDataView",
        "isDate",
        "isExternal",
        "isFloat16Array",
        "isFloat32Array",
        "isFloat64Array",
        "isGeneratorFunction",
        "isGeneratorObject",
        "isInt16Array",
        "isInt32Array",
        "isInt8Array",
        "isKeyObject",
        "isMap",
        "isMapIterator",
        "isModuleNamespaceObject",
        "isNativeError",
        "isNumberObject",
        "isPromise",
        "isProxy",
        "isRegExp",
        "isSet",
        "isSetIterator",
        "isSharedArrayBuffer",
        "isStringObject",
        "isSymbolObject",
        "isTypedArray",
        "isUint16Array",
        "isUint32Array",
        "isUint8Array",
        "isUint8ClampedArray",
        "isWeakMap",
        "isWeakSet"
      ]
    },
    "node:v8": {
      "exports": [
        "DefaultDeserializer",
        "DefaultSerializer",
        "Deserializer",
        "GCProfiler",
        "Serializer",
        "cachedDataVersionTag",
        "deserialize",
        "getCppHeapStatistics",
        "getHeapCodeStatistics",
        "getHeapSnapshot",
        "getHeapSpaceStatistics",
        "getHeapStatistics",
        "isStringOneByteRepresentation",
        "promiseHooks",
        "queryObjects",
        "serialize",
        "setFlagsFromString",
        "setHeapSnapshotNearHeapLimit",
        "startupSnapshot",
        "stopCoverage",
        "takeCoverage",
        "writeHeapSnapshot"
      ]
    },
    "node:vm": {
      "exports": [
        "Script",
        "compileFunction",
        "constants",
        "createContext",
        "createScript",
        "isContext",
        "measureMemory",
        "runInContext",
        "runInNewContext",
        "runInThisContext"
      ]
    },
    "node:wasi": {
      "exports": [
        "WASI"
      ]
    },
    "node:worker_threads": {
      "exports": [
        "BroadcastChannel",
        "MessageChannel",
        "MessagePort",
        "SHARE_ENV",
        "Worker",
        "getEnvironmentData",
        "isInternalThread",
        "isMainThread",
        "isMarkedAsUntransferable",
        "locks",
        "markAsUncloneable",
        "markAsUntransferable",
        "moveMessagePortToContext",
        "parentPort",
        "postMessageToThread",
        "receiveMessageOnPort",
        "resourceLimits",
        "setEnvironmentData",
        "threadId",
        "threadName",
        "workerData"
      ]
    },
    "node:zlib": {
      "exports": [
        "BrotliCompress",
        "BrotliDecompress",
        "Deflate",
        "DeflateRaw",
        "Gunzip",
        "Gzip",
        "Inflate",
        "InflateRaw",
        "Unzip",
        "ZstdCompress",
        "ZstdDecompress",
        "brotliCompress",
        "brotliCompressSync",
        "brotliDecompress",
        "brotliDecompressSync",
        "codes",
        "constants",
        "crc32",
        "createBrotliCompress",
        "createBrotliDecompress",
        "createDeflate",
        "createDeflateRaw",
        "createGunzip",
        "createGzip",
        "createInflate",
        "createInflateRaw",
        "createUnzip",
        "createZstdCompress",
        "createZstdDecompress",
        "deflate",
        "deflateRaw",
        "deflateRawSync",
        "deflateSync",
        "gunzip",
        "gunzipSync",
        "gzip",
        "gzipSync",
        "inflate",
        "inflateRaw",
        "inflateRawSync",
        "inflateSync",
        "unzip",
        "unzipSync",
        "zstdCompress",
        "zstdCompressSync",
        "zstdDecompress",
        "zstdDecompressSync"
      ],
      "extraDefaultExports": [
        "DEFLATE",
        "DEFLATERAW",
        "GUNZIP",
        "GZIP",
        "INFLATE",
        "INFLATERAW",
        "UNZIP",
        "ZLIB_VERNUM",
        "ZSTD_CLEVEL_DEFAULT",
        "ZSTD_COMPRESS",
        "ZSTD_DECOMPRESS",
        "ZSTD_btlazy2",
        "ZSTD_btopt",
        "ZSTD_btultra",
        "ZSTD_btultra2",
        "ZSTD_c_chainLog",
        "ZSTD_c_checksumFlag",
        "ZSTD_c_compressionLevel",
        "ZSTD_c_contentSizeFlag",
        "ZSTD_c_dictIDFlag",
        "ZSTD_c_enableLongDistanceMatching",
        "ZSTD_c_hashLog",
        "ZSTD_c_jobSize",
        "ZSTD_c_ldmBucketSizeLog",
        "ZSTD_c_ldmHashLog",
        "ZSTD_c_ldmHashRateLog",
        "ZSTD_c_ldmMinMatch",
        "ZSTD_c_minMatch",
        "ZSTD_c_nbWorkers",
        "ZSTD_c_overlapLog",
        "ZSTD_c_searchLog",
        "ZSTD_c_strategy",
        "ZSTD_c_targetLength",
        "ZSTD_c_windowLog",
        "ZSTD_d_windowLogMax",
        "ZSTD_dfast",
        "ZSTD_e_continue",
        "ZSTD_e_end",
        "ZSTD_e_flush",
        "ZSTD_error_GENERIC",
        "ZSTD_error_checksum_wrong",
        "ZSTD_error_corruption_detected",
        "ZSTD_error_dictionaryCreation_failed",
        "ZSTD_error_dictionary_corrupted",
        "ZSTD_error_dictionary_wrong",
        "ZSTD_error_dstBuffer_null",
        "ZSTD_error_dstSize_tooSmall",
        "ZSTD_error_frameParameter_unsupported",
        "ZSTD_error_frameParameter_windowTooLarge",
        "ZSTD_error_init_missing",
        "ZSTD_error_literals_headerWrong",
        "ZSTD_error_maxSymbolValue_tooLarge",
        "ZSTD_error_maxSymbolValue_tooSmall",
        "ZSTD_error_memory_allocation",
        "ZSTD_error_noForwardProgress_destFull",
        "ZSTD_error_noForwardProgress_inputEmpty",
        "ZSTD_error_no_error",
        "ZSTD_error_parameter_combination_unsupported",
        "ZSTD_error_parameter_outOfBound",
        "ZSTD_error_parameter_unsupported",
        "ZSTD_error_prefix_unknown",
        "ZSTD_error_srcSize_wrong",
        "ZSTD_error_stabilityCondition_notRespected",
        "ZSTD_error_stage_wrong",
        "ZSTD_error_tableLog_tooLarge",
        "ZSTD_error_version_unsupported",
        "ZSTD_error_workSpace_tooSmall",
        "ZSTD_fast",
        "ZSTD_greedy",
        "ZSTD_lazy",
        "ZSTD_lazy2",
        "Z_BEST_COMPRESSION",
        "Z_BEST_SPEED",
        "Z_BLOCK",
        "Z_BUF_ERROR",
        "Z_DATA_ERROR",
        "Z_DEFAULT_CHUNK",
        "Z_DEFAULT_COMPRESSION",
        "Z_DEFAULT_LEVEL",
        "Z_DEFAULT_MEMLEVEL",
        "Z_DEFAULT_STRATEGY",
        "Z_DEFAULT_WINDOWBITS",
        "Z_ERRNO",
        "Z_FILTERED",
        "Z_FINISH",
        "Z_FIXED",
        "Z_FULL_FLUSH",
        "Z_HUFFMAN_ONLY",
        "Z_MAX_CHUNK",
        "Z_MAX_LEVEL",
        "Z_MAX_MEMLEVEL",
        "Z_MAX_WINDOWBITS",
        "Z_MEM_ERROR",
        "Z_MIN_CHUNK",
        "Z_MIN_LEVEL",
        "Z_MIN_MEMLEVEL",
        "Z_MIN_WINDOWBITS",
        "Z_NEED_DICT",
        "Z_NO_COMPRESSION",
        "Z_NO_FLUSH",
        "Z_OK",
        "Z_PARTIAL_FLUSH",
        "Z_RLE",
        "Z_STREAM_END",
        "Z_STREAM_ERROR",
        "Z_SYNC_FLUSH",
        "Z_VERSION_ERROR"
      ]
    },
    "node:sea": {
      "exports": [
        "getAsset",
        "getAssetAsBlob",
        "getAssetKeys",
        "getRawAsset",
        "isSea"
      ]
    },
    "node:sqlite": {
      "exports": [
        "DatabaseSync",
        "Session",
        "StatementSync",
        "backup",
        "constants"
      ]
    },
    "node:test": {
      "exports": [
        "after",
        "afterEach",
        "assert",
        "before",
        "beforeEach",
        "describe",
        "it",
        "mock",
        "only",
        "run",
        "skip",
        "snapshot",
        "suite",
        "test",
        "todo"
      ]
    },
    "node:test/reporters": {
      "exports": [
        "dot",
        "junit",
        "lcov",
        "spec",
        "tap"
      ]
    }
  }
}